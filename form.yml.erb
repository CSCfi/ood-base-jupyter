# Batch Connect app configuration file
#
# @note Used to define the submitted cluster, title, description, and
#   hard-coded/user-defined attributes that make up this Batch Connect app.
---

# **MUST** set cluster id here that matches cluster configuration file located
# under /etc/ood/config/clusters.d/*.yml
# @example Use the Owens cluster at Ohio Supercomputer Center
#     cluster: "owens"

# Define attribute values that aren't meant to be modified by the user within
# the Dashboard form
attributes:
  # Set the corresponding modules that need to be loaded for Jupyter to run
  #
  # @note It is called within the batch job as `module load <modules>` if
  #   defined
  # @example Do not load any modules
  #     modules: ""
  # @example Using default python module
  #     modules: "python"
  # @example Using specific python module
  #     modules: "python/3.5"
  # @example Using combination of modules
  #     modules: "python/3.5 cuda/8.0.44"
  #modules: "python-env/2019.3"
  #bc_queue: "test" 

  # Any extra command line arguments to feed to the `jupyter notebook ...`
  # command that launches the Jupyter notebook within the batch job

  csc_slurm_partition:
    value: "interactive"
    select:
      - "interactive"
      - "gpusmall"
  csc_time:
    max-gpusmall: "8:00:00"
  csc_module:
      submit: python_module
      label: Python
      options:
        - spider: "python-data"
        - spider: "geoconda"
        - spider: "pytorch"
        - spider: "tensorflow"
        - ["Custom module", "Custom"]
        - ["Custom path", "CustomPath"]
      help: |
        Select the Python module to use. If you need a non-default version of a module, or a not listed module, you can use the *Custom module* option.
        For Python environments created using [Tykky](https://docs.csc.fi/computing/containers/tykky/), use the *Custom path* option.
  custom_path:
    label: "Custom Python interpreter"
    widget: text_field
    value: ""
    wrapper:
      class: "custom_path"
    help: |
      Specify the absolute path to the Python interpreter.
      E.g `/scratch/project_12345/myInstall/bin/python`.
  custom_module:
    widget: text_field
    label: "Custom Python module"
    value : ""
    wrapper:
      class: "custom_module"
    help: |
      Specify a module to load, in the format `name` or `name/version`, e.g. *pytorch/2.1*.
      Leave empty to use the system Python. A virtual environment must be used when using system python.
  jp_type:
      widget: select
      label: "Jupyter type"
      options:
        - ["Notebook","notebook"]
        - ["Lab","lab"]
      value: "notebook"
      wrapper:
        class: "advanced"
  csc_path:
    submit: notebook_dir
    label: "Working directory"
    paths:
      - "HOME"
      - "SCRATCH"
      - "PROJAPPL"
      - "/"
  advanced:
    label: "Show advanced settings"
    widget: check_box
    value: "0"
  extra_packages:
    widget: radio_button
    label: "Additional packages"
    options:
      - ["Disabled", "none"]
      - ["User packages", "user_packages"]
      - ["Virtual environment", "venv"]
    value: "user_packages"
    help: |
      Select how the Python environment can be extended with additional packages.
  python_user_base:
    widget: text_field
    label: "User packages path"
    value : ""
    wrapper:
      class: "advanced user_packages user_packages_field"
    help: |
      Path to a directory to install user packages in under `/scratch` or `/projappl`. This will set the `PYTHONUSERBASE` environment variable.
      If left empty, packages will be installed under `~/.local/lib`, which is not recommended due to the limited disk quota for the home directory.
  venv:
    widget: text_field
    label: "Virtual environment path"
    value : ""
    wrapper:
      class: "advanced venv"
    help: |
      Path to a virtual environment under `/scratch/${your_project}` or `/projappl/${your_project}`. A new virtual environment will be created using `python -m venv <path>` if it does not exist.
  csc_reset_cache:
    app: "sys/ood-base-jupyter"
  csc_extra_desc:
    desc: |
      <a href="https://docs.csc.fi/computing/webinterface/jupyter/" target="_blank">Documentation</a>

form:
  - csc_extra_desc
  - csc_slurm_reservation
  - csc_slurm_project
  - csc_slurm_partition
  - csc_header_resources
  - csc_cores
  - csc_memory
  - csc_nvme
  - csc_time
  - csc_header_settings
  - csc_module
  - custom_module
  - custom_path
  - csc_path
  - advanced
  - jp_type
  - extra_packages
  - venv
  - python_user_base
  - csc_reset_cache
  - csc_slurm_limits
